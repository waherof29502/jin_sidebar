{"ast":null,"code":"import _slicedToArray from \"/Users/jinpingwang/Documents/GitHub/jin_sidebar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jinpingwang/Documents/GitHub/jin_sidebar/src/components/ChannelBar.jsx\";\n\nimport React, { Component } from 'react';\nimport { useState } from 'react';\nimport { BsHash } from 'react-icons/bs';\nimport { FaChevronDown, FaChevronRight, FaPlus } from 'react-icons/fa';\nvar topics = ['tailwind-css', 'react'];\nvar questions = ['jit-compilation', 'purge-files', 'dark-mode'];\nvar random = ['variants', 'plugins'];\n\nvar ChannelBar = function ChannelBar() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-2 channel-bar shadow-lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ChannelBlock, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DropDown, {\n    header: \"Topics\",\n    selections: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DropDown, {\n    header: \"Questions\",\n    selections: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DropDown, {\n    header: \"Random\",\n    selections: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar DropDown = function DropDown(_ref) {\n  var header = _ref.header,\n      selections = _ref.selections;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      expanded = _useState2[0],\n      setExpanded = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: function onClick() {\n      return setExpanded(!expanded);\n    },\n    className: \"dropdown-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ChevronIcon, {\n    expanded: expanded,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: expanded ? 'dropdown-header-text-selected' : 'dropdown-header-text',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, header)));\n}; // const Dropdown = ({ header, selections }) => {\n//     const [expanded, setExpanded] = useState(true);\n//     return (\n//       <div className='dropdown'>\n//         <div onClick={() => setExpanded(!expanded)} className='dropdown-header'>\n//           <ChevronIcon expanded={expanded} />\n//           <h5\n//             className={expanded ? 'dropdown-header-text-selected' : 'dropdown-header-text'}\n//           >\n//             {header}\n//           </h5>\n//           <FaPlus size='12' className='text-accent text-opacity-80 my-auto ml-auto' />\n//         </div>\n//         {expanded &&\n//           selections &&\n//           selections.map((selection) => <TopicSelection selection={selection} />)}\n//       </div>\n//     );\n//   };\n\n\nvar ChevronIcon = function ChevronIcon(_ref2) {\n  var expanded = _ref2.expanded;\n  var checkedClass = 'text-accent text-opacity-80 my-auto mr-1';\n  return expanded ? /*#__PURE__*/React.createElement(FaChevronDown, {\n    size: \"14\",\n    className: checkedClass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(FaChevronRight, {\n    size: \"14\",\n    className: checkedClass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  });\n};\n\nvar ChannelBlock = function ChannelBlock() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"channel-block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"channel-block-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, \"Channels\"));\n};\n\nexport default ChannelBar;","map":{"version":3,"names":["React","Component","useState","BsHash","FaChevronDown","FaChevronRight","FaPlus","topics","questions","random","ChannelBar","DropDown","header","selections","expanded","setExpanded","ChevronIcon","checkedClass","ChannelBlock"],"sources":["/Users/jinpingwang/Documents/GitHub/jin_sidebar/src/components/ChannelBar.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { useState } from 'react';\nimport { BsHash } from 'react-icons/bs';\nimport { FaChevronDown, FaChevronRight, FaPlus } from 'react-icons/fa';\n\nconst topics = ['tailwind-css', 'react'];\nconst questions = ['jit-compilation', 'purge-files', 'dark-mode'];\nconst random = ['variants', 'plugins'];\n\nconst ChannelBar = () => {\n  return (\n    <div className='flex-2 channel-bar shadow-lg'>\n      <ChannelBlock />\n      <div className='channel-container'>\n        <DropDown header='Topics' selections='text' />\n        <DropDown header='Questions' selections='text' />\n        <DropDown header='Random' selections='text' />\n      </div>\n    </div>\n  );\n};\n\nconst DropDown = ({ header, selections }) => {\n  const [expanded, setExpanded] = useState(true);\n\n  return (\n    <div className='dropdown'>\n      <div onClick={() => setExpanded(!expanded)} className='dropdown-header'>\n        <ChevronIcon expanded={expanded} />\n        <h5\n          className={\n            expanded ? 'dropdown-header-text-selected' : 'dropdown-header-text'\n          }\n        >\n          {header}\n        </h5>\n      </div>\n    </div>\n  );\n};\n\n// const Dropdown = ({ header, selections }) => {\n//     const [expanded, setExpanded] = useState(true);\n\n//     return (\n//       <div className='dropdown'>\n//         <div onClick={() => setExpanded(!expanded)} className='dropdown-header'>\n//           <ChevronIcon expanded={expanded} />\n//           <h5\n//             className={expanded ? 'dropdown-header-text-selected' : 'dropdown-header-text'}\n//           >\n//             {header}\n//           </h5>\n//           <FaPlus size='12' className='text-accent text-opacity-80 my-auto ml-auto' />\n//         </div>\n//         {expanded &&\n//           selections &&\n//           selections.map((selection) => <TopicSelection selection={selection} />)}\n//       </div>\n//     );\n//   };\n\nconst ChevronIcon = ({ expanded }) => {\n  const checkedClass = 'text-accent text-opacity-80 my-auto mr-1';\n  return expanded ? (\n    <FaChevronDown size='14' className={checkedClass} />\n  ) : (\n    <FaChevronRight size='14' className={checkedClass} />\n  );\n};\n\nconst ChannelBlock = () => (\n  <div className='channel-block'>\n    <h5 className='channel-block-text'>Channels</h5>\n  </div>\n);\n\nexport default ChannelBar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}